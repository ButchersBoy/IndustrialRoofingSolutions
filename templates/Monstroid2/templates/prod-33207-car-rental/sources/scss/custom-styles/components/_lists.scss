//
// Lists
// --------------------------------------------------

// Default list
//

.list-0 {
	line-height: 1.25;

	> li + li {
		margin-top: 0;
	}
}

.list-small {
	> li {
		@include small;
	}

	> li + li {
		margin-top: 0;
	}
}

.list {
	> li + li {
		margin-top: 5px;
	}
}

.list-xxs {
	> li + li {
		margin-top: 11px;
	}
}

.list-xs {
	> li + li {
		margin-top: 16px;
	}
}

.list-sm {
	> li + li {
		margin-top: 22px;
	}
}

.list-md {
	> li + li {
		margin-top: 30px;
	}
}

.list-lg {
	> li + li {
		margin-top: 30px;
	}
}

@include media-breakpoint-up(md) {
	.list-lg {
		> li + li {
			margin-top: 50px;
		}
	}
}

@include media-breakpoint-up(xl) {
}

// Inline list
.list-inline-xxs {
	@include inline-list(12px, 5px);
}

.list-inline-xs {
	@include inline-list(15px, 5px);
}

.list-inline-sm {
	@include inline-list(20px, 8px);
}

.list-inline-md {
	@include inline-list(25px, 10px);
}

// Terms list
.list-terms {
	text-align: left;
  @include small;

  ul > li:first-child{
    font-size: $font-size-body;
    line-height: $line-height-base;
  }

	dt + dd {
		margin-top: 22px * $xs-multiplier;
	}

	dd + dt {
		margin-top: 35px * $xs-multiplier;
	}
}

@include media-breakpoint-up(lg) {
  .list-terms {
    dt + dd {
      margin-top: 22px * $lg-multiplier;
    }

    dd + dt {
      margin-top: 35px * $lg-multiplier;
    }
  }
}

@include media-breakpoint-up(xl) {
	.list-terms {
    dt + dd {
      margin-top: 22px;
    }

    dd + dt {
      margin-top: 35px;
    }
	}
}

// List terms inline
.list-terms-inline {
	dt,
	dd {
		display: inline-block;
	}

	dt {
		padding-right: 5px;

		&:after {
			content: ':';
		}
	}
}

// List terms minimal
.list-terms-minimal {
	* {
		display: inline;
	}

	dt:after {
		display: inline-block;
		margin-right: 3px;
		content: ':';
	}
}

// List terms modern
.list-terms-modern {
	dt,
	dd {
		display: block;
	}

	dt {
		color: $black;

		&::after {
			display: inline-block;
			margin-right: 3px;
			content: ':';
		}
	}

	dd {
		color: $body-color;

		a {
			color: inherit;

			&:hover {
				color: $secondary;
			}
		}
	}
}

// Index list
.index-list {
	counter-reset: li;

	> li {
		.list-index-counter {
			&:before {
				content: counter(li, decimal-leading-zero);
				counter-increment: li;
			}
		}
	}
}

// Marked list
.list-marked {
	> li {
		position: relative;
		padding-left: 12px;
		color: $secondary;

		&::before {
			content: '';
			position: absolute;
			top: calc(14px * #{$line-height-base} / 2 - 1.5px);
			left: 0;
			height: 3px;
			width: 3px;
      border-radius: 50%;
			background: $secondary;
      @include media-breakpoint-up(md) {
        top: calc(16px * #{$line-height-base} / 2 - 1.5px);
      }
      @include media-breakpoint-up(xl) {
        top: calc($font-size-body * #{$line-height-base} / 2 - 1.5px);
      }
		}

		a {
			@include link($primary, $black);
		}
	}

	> li + li {
		margin-top: 7px;
	}
}

.list-marked-sm {
  font-size: 14px;
  margin-left: 9px;
  > li {
    &::before {
      top: calc(14px * #{$line-height-base} / 2 - 1.5px);
    }
  }
}

p + .list-marked-sm {
  margin-top: 25px * $xs-multiplier;
  @include media-breakpoint-up(lg) {
    margin-top: 25px * $lg-multiplier;
  }
  @include media-breakpoint-up(xl) {
    margin-top: 25px;
  }
}

.list-marked-primary {
	@extend .list-marked;

	> li {
		color: $primary;

		&:before {
			background: $primary;
		}
	}

}

// Ordered list
.list-ordered {
	counter-reset: li;

	> li {
		position: relative;
		padding-left: 2em;

		&:before {
			position: absolute;
			top: 0;
			left: 0;
			display: inline-block;
			width: 15px;
			content: counter(li, decimal-leading-zero) '.';
			counter-increment: li;
			color: $black;
		}

		a {
			@include link(inherit, $primary);
		}
	}

	li + li {
		margin-top: 8px;
	}
}

// List semicolon
.list-semicolon {
	> li {
		display: inline;
		color: $body-color;
	}

	a {
		color: inherit;

		&:hover {
			color: $primary;
		}
	}

	> li + li {
		&:before {
			display: inline-block;
			margin-right: 4px;
			content: ';';
		}
	}
}

// List linked
.list-linked {
	font-size: 14px;
	line-height: (24 / 14);

	> li {
		display: block;
	}

	a {
		position: relative;
		display: block;
		color: $primary;

		&::after {
			position: absolute;
			right: 0;
			bottom: 3px;
			content: '\e944';
			font-family: 'Linearicons';
			font-size: inherit;
		}

		&:hover {
			color: $black;
		}
	}

	> li + li {
		margin-top: 10px;
	}
}

// List tags
.list-tags {
	@include spacing(8px, 10px);

	> li {
		display: inline-block;
		font-size: 12px;
	}

	a {
		display: inline-block;
		padding: 10px 12px;
		color: $gray;
		background: $gray-lighter;
		border: 1px solid $gray-lighter;
		border-radius: 3px;

		&:hover {
			background-color: transparent;
			border-color: $gray-1;
		}
	}
}

@include media-breakpoint-up(xl) {
	.list-tags {
		a {
			padding: 15px 18px;
		}
	}
}

.list-inline-tag {
	color: $primary;

	li {
		display: inline-block;

		&:after {
			content: ',';
			color: inherit;
		}

		&:last-of-type {
			&:after {
				content: none;
			}
		}
	}
}

// List nav
.list-nav {
	@include spacing(30px, 10px);

	> li {
		display: inline-block;
		font-size: 12px;
		font-weight: 400;
		text-transform: uppercase;
		color: $black;

		a {
			color: inherit;
		}
	}

	> li.active,
	> li a.active,
	> li > a:hover {
		color: $primary;
	}
}

// List bordered
.list-bordered {
	@include spacing(24px, 10px);

	> li {
		position: relative;
		display: inline-block;
	}

	@include media-breakpoint-up(lg) {
		> li {
			&::before {
				content: '';
				position: absolute;
				right: 0;
				top: 50%;
				transform: translateY(-50%);
				width: 1px;
				height: 32px;
				background: $gray-1;
			}
			&:last-of-type {
				&::before {
					display: none;
				}
			}
		}
	}
}

// List archive
.list-archive {
	li a {
		font-size: 14px;
		color: $black;

		&:hover {
			color: $primary;
		}
	}
}

// List social
.list-social {
  a {
    position: relative;
    &::after {
      content: '';
      width: 0%;
      height: 2px;
      position: absolute;
      left: 50%;
      bottom: -8px;
      background-color: $secondary;
      transform: translateX(-50%);
      transition: $transition-base;
      opacity: 0;
    }
    &:hover:after {
      width: 100%;
      opacity: 1;
    }
  }
}